# Publish this application to bluemix using ansible
---
- name: Publish the app to Bluemix
  hosts: localhost
  connection: local
  vars:
    pipeline_id: "{{ lookup('env','PIPELINE_ID') | default('test-php-sample-1',true) }}"
    app_hostname: "{{ lookup('env','APP_HOSTNAME') | default(pipeline_id,true) }}"
    pwd: "{{ lookup('env', 'PWD') }}"
    s3_bucket: "{{ lookup('env', 'S3_BUCKET')  }}"
    region: "{{ lookup('env', 'AWS_DEFAULT_REGION') | default('us-west-2', true) }}"

  tasks:
    # Store datetime for version info
    - name: set fact
      set_fact: date="{{ lookup('pipe', 'date +%Y%m%d-%H%M%S%Z')  }}"

    # Create a directory for the archive
    - name: Create Directory
      file:
        path: "{{ pwd }}/s3"
        state: directory

    # Create a zip archive (elasticbeanstalk only supports zips and jars currently)
    - name: Create zip archive
      shell: "zip -r {{pwd}}/s3/{{app_hostname}}.zip . -x s3\\* .bluemix\\* .git\\* ansible-elastic-beanstalk\\* setup_tools\\* .playbook.* .gitignore .cfignore .tarignore manifest.yml _*.sh"

    # ansible s3 docs: http://docs.ansible.com/ansible/s3_module.html
    # for versioning, can enable versioning in bucket and use version: {{ date }} value or set object to {{app_hostname}}-{{date}}.zip
    - name: push to s3
      s3:
        mode: put
        region: "{{ region }}"
        bucket: "{{ s3_bucket }}"
        src: "{{pwd}}/s3/{{app_hostname}}.zip"
        object: "{{app_hostname}}.zip"

    # Create beanstalk app
    - name: Create Elastic Beanstalk application
      elasticbeanstalk_app:
        region: "{{ region }}"
        app_name: "{{ app_hostname }}"
        state: present
      register: app

    # Connect to s3 bucket version
    - name: Link uploaded version
      elasticbeanstalk_version:
        region: "{{ region }}"
        app_name: "{{ app_hostname }}"
        version_label: "{{ date }}"
        s3_bucket: "{{ s3_bucket  }}"
        s3_key: "{{app_hostname}}.zip"
        state: present
      register: version

    # Create the environment
    - name: Create app env
      elasticbeanstalk_env:
        region: "{{ region }}"
        app_name: "{{ app_hostname }}"
        env_name: "{{ app_hostname }}-env"
        version_label: "{{ date }}"
        solution_stack_name: "64bit Amazon Linux 2016.09 v2.3.1 running PHP 5.5"
      register: env
